[project]
name = "kalshi-analysis-backend"
version = "0.1.0"
description = "Kalshi Market Insights - Backend API"
authors = [
    {name = "Sean R.B. Bearden, Ph.D.", email = "sean@beardendatasolutionsllc.com"}
]
requires-python = ">=3.11"
dependencies = [
    "fastapi[all]>=0.109.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    "uvicorn[standard]>=0.27.0",
    "sqlalchemy[asyncio]>=2.0.25",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "httpx>=0.26.0",
    "tenacity>=8.2.3",
    "slowapi>=0.1.9",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.98.0",
    "ruff>=0.13.3",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*", "alembic*"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by ruff format)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["core", "domain", "infrastructure", "schemas", "api"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]
exclude = ["^build/", "^dist/"]
mypy_path = "."
namespace_packages = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "alembic.*",
    "fastapi.*",
    "pydantic.*",
    "httpx.*",
    "tenacity.*",
    "slowapi.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "alembic/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
