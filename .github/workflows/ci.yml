name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend (Python)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Lint with Ruff
        run: |
          cd backend
          ruff check .

      - name: Format check with Ruff
        run: |
          cd backend
          ruff format --check .

      - name: Type check with mypy
        run: |
          cd backend
          mypy .

      - name: Run tests with pytest
        run: |
          cd backend
          pytest tests/ -v --cov=. --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-${{ matrix.python-version }}

  frontend:
    name: Frontend (TypeScript)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["22"]

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: |
          cd frontend
          pnpm install --frozen-lockfile

      - name: Lint with ESLint
        run: |
          cd frontend
          pnpm lint

      - name: Type check
        run: |
          cd frontend
          pnpm type-check

      - name: Format check with Prettier
        run: |
          cd frontend
          pnpm format:check

      - name: Run tests
        run: |
          cd frontend
          pnpm test:ci

      - name: Build
        run: |
          cd frontend
          pnpm build

  docker:
    name: Docker Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: kalshi-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker Compose
        run: |
          cp backend/.env.example backend/.env
          docker compose up -d --wait
          docker compose ps
          docker compose down -v
